require 'gtk'; include Gtk

class FindBox < Window
  def initialize(initial_find = '', initial_replace = '')
    super()
    (ag = AccelGroup.new).attach(self)

    border_width 5
    set_default_size 200,100
    set_modal true
    add(main_frame=VBox.new(false,4))

    main_frame.add(tbl = Table.new(2,2,false))
    tbl.attach(Label.new('Find:'), 0,1,0,1)
    tbl.attach((@find=Entry.new), 1,2,0,1)
    tbl.attach(Label.new('Replace:'), 0,1,1,2)
    tbl.attach((@replace=Entry.new), 1,2,1,2)

    @find.set_text(initial_find)
    @replace.set_text(initial_replace)

    main_frame.add(frame=HBox.new(true,10))
    frame.add(@find_btn = Button.new('Fi_nd'))
    frame.add(@one_btn = Button.new('Replace _one'))
    frame.add(@all_btn = Button.new('Replace a_ll'))
    frame.add(cancel_btn = Button.new('Cancel'))

    @find_btn.add_accelerator('clicked', ag,
       @find_btn.child.parse_uline('Fi_nd'),
        Gdk::CONTROL_MASK, 0)
    @one_btn.add_accelerator('clicked', ag,
       @one_btn.child.parse_uline('Replace _one'),
        Gdk::CONTROL_MASK, 0)
    @all_btn.add_accelerator('clicked', ag,
       @all_btn.child.parse_uline('Replace a_ll'),
        Gdk::CONTROL_MASK, 0)
    cancel_btn.add_accelerator('clicked', ag,
       Gdk::GDK_Escape,
     0, 0)

    cancel_btn.signal_connect('clicked') {destroy}

    @find.grab_focus
    show_all
  end

  # Make the widgets accessible to the caller, so
  # signals can be connected to them, and info
  # extracted from them.
  attr_reader :find_btn, :one_btn, :all_btn
  attr_reader :find, :replace
   
end

# test code
if __FILE__ == $0
  f = FindBox.new("findme")
  f.find_btn.signal_connect('clicked') do
    puts f.find.get_text
    f.destroy; main_quit
  end
  f.one_btn.signal_connect('clicked') do
    puts f.find.get_text
    puts f.replace.get_text
    f.destroy; main_quit
  end
  f.all_btn.signal_connect('clicked') do
    puts 'replace all:'
    puts f.find.get_text
    puts f.replace.get_text
    f.destroy; main_quit
  end
  main
end